<!DOCTYPE html>
<html>
<!--
Copyright 2009 Google Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<head>
  <title>Google Earth API Samples - Screen Overlay (Frame)</title>
  <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  <!-- You should probably remove most of this extra cruft if you're copying
       this sample! -->
  <style type="text/css">@import "static/examples.css";</style>
  <style type="text/css">@import "static/prettify/prettify.css";</style>
  <script type="text/javascript" src="static/prettify/prettify.js"></script>
  
  <!-- Change the key below to your own Maps API key -->
  <script type="text/javascript" src="http://www.google.com/jsapi?hl=en&amp;key=ABQIAAAAwbkbZLyhsmTCWXbTcjbgbRSzHs7K5SvaUdm8ua-Xxy_-2dYwMxQMhnagaawTo7L1FE1-amhuQxIlXw"></script>
  <script type="text/javascript">
  /* <![CDATA[ */
  var ge;
  google.load("earth", "1");

  function init() {
    google.earth.createInstance('map3d', initCB, failureCB);
  }
  
  function initCB(instance) {
    ge = instance;
    ge.getWindow().setVisibility(true);
    
    // add a navigation control
    ge.getNavigationControl().setVisibility(ge.VISIBILITY_AUTO);
    
    // add some layers
    ge.getLayerRoot().enableLayerById(ge.LAYER_BORDERS, true);
    ge.getLayerRoot().enableLayerById(ge.LAYER_ROADS, true);

    var screenOverlay = ge.createScreenOverlay('');
    
    // Set the visibility to false while we construct the overlay.
    screenOverlay.setVisibility(false);
    
    var icon = ge.createIcon('');
    icon.setHref('http://earth-api-samples.googlecode.com/svn/trunk/examples/' +
                 'static/frame.png');  // Loads an gilded picture frame.
    screenOverlay.setIcon(icon);
    
    // ---------------------------------------------------------------------------
    // WARNING: screenXY and overlayXY in the Earth API are swapped, relative
    // to the KML specification. In the Earth API, screenXY is a point on the
    // overlay image, and overlayXY is a point inside the plugin window.
    // ---------------------------------------------------------------------------
    
    // Position the overlay.  ScreenXY(0,0) is mapped to OverlayXY(0,0)
    var screenXY = screenOverlay.getScreenXY();
    screenXY.setXUnits(ge.UNITS_PIXELS);
    screenXY.setYUnits(ge.UNITS_PIXELS);
    screenXY.setX(0);
    screenXY.setY(0);
    
    var overlayXY = screenOverlay.getOverlayXY();
    overlayXY.setXUnits(ge.UNITS_PIXELS);
    overlayXY.setYUnits(ge.UNITS_PIXELS);
    overlayXY.setX(0);
    overlayXY.setY(0);
    
    // Set object's size in fractions of the 3d view window.  By setting
    // to (1, 1), this image will cover the entire Earth window.
    var overlaySize = screenOverlay.getSize()
    overlaySize.setXUnits(ge.UNITS_FRACTION);
    overlaySize.setYUnits(ge.UNITS_FRACTION);
    overlaySize.setX(1);
    overlaySize.setY(1);
    
    screenOverlay.setVisibility(true);
    
    ge.getFeatures().appendChild(screenOverlay);
    
    document.getElementById('installed-plugin-version').innerHTML =
      ge.getPluginVersion().toString();
  }
  
  function failureCB(errorCode) {
  }
  
  /* ]]> */
  </script>
</head>
<body onload="if(window.prettyPrint)prettyPrint();init();">
  <h1>Google Earth API Samples - Screen Overlay (Frame)</h1>
  <dl>
            <dt>Last Modified:</dt><dd>06/08/2009</dd>
    <dt>Installed Plugin Version:</dt><dd id="installed-plugin-version">...</dd>
  </dl>
  <div style="clear: both;"></div>
  
  <div id="ui" style="position: relative;">
    <div id="map3d" style="border: 1px solid silver; width: 500px; height: 500px;"></div>

    <div id="extra-ui" style="position: absolute; left: 520px; top: 0;">
      <h2>Relevant Resources:</h2>
      <ul>
<li><a href="http://code.google.com/apis/earth/documentation/reference/interface_kml_screen_overlay.html">KmlScreenOverlay Reference</a></li>
<li><a href="http://code.google.com/apis/earth/documentation/reference/interface_kml_icon.html">KmlIcon Reference</a></li>
<a id="playground-button" href="http://code.google.com/apis/ajax/playground/?exp=earth#screen_overlay_(frame)"><img src="static/playground-button.png"/></a>      </ul>
      <h2>Relevant Code Excerpt:</h2>      <pre class="prettyprint lang-js">var screenOverlay = ge.createScreenOverlay('');

// Set the visibility to false while we construct the overlay.
screenOverlay.setVisibility(false);

var icon = ge.createIcon('');
icon.setHref('http://earth-api-samples.googlecode.com/svn/trunk/examples/' +
             'static/frame.png');  // Loads an gilded picture frame.
screenOverlay.setIcon(icon);

// ---------------------------------------------------------------------------
// WARNING: screenXY and overlayXY in the Earth API are swapped, relative
// to the KML specification. In the Earth API, screenXY is a point on the
// overlay image, and overlayXY is a point inside the plugin window.
// ---------------------------------------------------------------------------

// Position the overlay.  ScreenXY(0,0) is mapped to OverlayXY(0,0)
var screenXY = screenOverlay.getScreenXY();
screenXY.setXUnits(ge.UNITS_PIXELS);
screenXY.setYUnits(ge.UNITS_PIXELS);
screenXY.setX(0);
screenXY.setY(0);

var overlayXY = screenOverlay.getOverlayXY();
overlayXY.setXUnits(ge.UNITS_PIXELS);
overlayXY.setYUnits(ge.UNITS_PIXELS);
overlayXY.setX(0);
overlayXY.setY(0);

// Set object's size in fractions of the 3d view window.  By setting
// to (1, 1), this image will cover the entire Earth window.
var overlaySize = screenOverlay.getSize()
overlaySize.setXUnits(ge.UNITS_FRACTION);
overlaySize.setYUnits(ge.UNITS_FRACTION);
overlaySize.setX(1);
overlaySize.setY(1);

screenOverlay.setVisibility(true);

ge.getFeatures().appendChild(screenOverlay);</pre>    </div>
  </div>
</body>
</html>
